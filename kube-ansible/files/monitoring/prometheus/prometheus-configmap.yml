apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configmap
data:
prometheus.yml: |
   global:
     scrape_interval: 10s
     scrape_timeout: 10s
     evaluation_interval: 10s
   scrape_configs:
       # Kubernetes exposes API servers as endpoints to the default/kubernetes
       # service so this uses `endpoints` role and uses relabelling to only keep
       # the endpoints associated with the default/kubernetes service using the
       # default named port `https`
     - job_name: 'kubernetes-apiservers'
       kubernetes_sd_configs:
       - role: endpoints
       # use CA certificates to give prometheus the access to API servers
       tls_config:
         ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
       bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
       relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
     - job_name: 'kubernetes-nodes'
       #use CA certificates to give prometheus the access to kubernetes cluster nodes
       tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
       bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
       kubernetes_sd_configs:
          - role: node
       relabel_configs:
          - source_labels: [__address__]
            regex: '(.*):10250'
            replacement: '${1}:10255'
            target_label: __address__
     - job_name: 'kubernetes-endpoints'
       kubernetes_sd_configs:
          - role: endpoints
       relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
            #protocol used by the service to connect to its endpoints
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
            # the path of collected metrics of a specific endpoint of the service
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
            # the address of the service to scrape its endpoints
          - source_labels: [__address_, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+)(?::\d+);(\d+)
            replacement: $1:$2
            # the namespace of the endpoints 
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_name
            # the name of the service to scrape its endpoints
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name
     - job_name: 'kubernetes-pods'
       kubernetes_sd_configs:
          - role: pod
       relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
            #the path of the collected metrics of the target pod on the storage address
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            regex: (.+)
            target_label: __metrics_path__
            #the address of the target pod
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: (.+):(?:\d+);(\d+)
            replacement: ${1}:${2}
            target_label: __address__
            # the namaspace that the pod is included 
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label:  kubernetes_namespace
            # the name of the target pod
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
